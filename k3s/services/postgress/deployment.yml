apiVersion: apps/v1
kind: Deployment # Create a deployment
metadata:
  name: postgres # Set the name of the deployment
  namespace: postgres # Set the name of the deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      # securityContext:
      #   runAsUser: 70
      containers:
        - name: postgres
          image: postgres:14-alpine
          imagePullPolicy: "IfNotPresent"
          # command: ["postgres"]
          # args: ["-cssl=on", "-cssl_cert_file=/var/lib/postgresql/ssl/tls.crt", "-cssl_key_file=/var/lib/postgresql/ssl/key.crt"]
          resources:
            limits:
              memory: 4096Mi
              cpu: 4096m
            requests:
              memory: 2048Mi
              cpu: 2048m
          ports:
            - containerPort: 5432 # Exposing the container port 5432 for PostgreSQL client connections.
          env: 
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-password
                  key: password
          envFrom:
            - configMapRef:
                name: postgres-config # Using the ConfigMap postgres-secret
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdata
              subPath: postgresdata
            # - mountPath: /var/lib/postgresql/ssl
            #   name: postgresssl
            #   subPath: postgresssl
      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: postgres-local-data-pvc3
        # - name: postgresssl
        #   secret:
        #     secretName: postgres-kevinlutzer-ca-tls